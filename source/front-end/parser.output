Terminals unused in grammar

    DEC_FUNC_PREC


State 13 conflicts: 2 shift/reduce


Grammar

    0 $accept: INPUT $end

    1 INPUT: %empty
    2      | INPUT PROGRAM

    3 $@1: %empty

    4 PROGRAM: $@1 DEC_FUNCS START_FUNCTION DEC_FUNCS

    5 $@2: %empty

    6 START_FUNCTION: START_FUNC_DECL $@2 LPARENT RPARENT FUNCTION_BLOCK

    7 DEC_FUNCS: %empty
    8          | DEC_FUNCS DEC_FUNC

    9 $@3: %empty

   10 DEC_FUNC: RETURNTYPE IDENTIFIER $@3 LPARENT DEC_FUNC_CALL_PARAMS RPARENT FUNCTION_BLOCK

   11 DEC_FUNC_CALL_PARAMS: %empty
   12                     | RETURNTYPE IDENTIFIER DEC_FUNC_CALL_PARAMS_OPT

   13 DEC_FUNC_CALL_PARAMS_OPT: %empty
   14                         | COMMA RETURNTYPE IDENTIFIER DEC_FUNC_CALL_PARAMS_OPT

   15 RETURNTYPE: DATATYPE
   16           | VOID

   17 STATEMENTS: %empty
   18           | STATEMENTS STATEMENT

   19 STATEMENT: VARIABLE_DEF
   20          | ASSIGNMENT
   21          | EXPRESSION_SC
   22          | RETURN_CALL
   23          | CONTROL_FLOW
   24          | FUNCTION_BLOCK

   25 $@4: %empty

   26 FUNCTION_BLOCK: $@4 LCURLYBRACE STATEMENTS RCURLYBRACE

   27 VARIABLE_DEF: DATATYPE IDENTIFIER ASSIGN EXPRESSION SEMICOLON

   28 ASSIGNMENT: IDENTIFIER ASSIGN EXPRESSION SEMICOLON
   29           | IDENTIFIER MODIFIER EXPRESSION SEMICOLON

   30 EXPRESSION_SC: EXPRESSION SEMICOLON

   31 RETURN_CALL: CF_RETURN RETURN_CALL_OPT SEMICOLON

   32 RETURN_CALL_OPT: %empty
   33                | EXPRESSION

   34 $@5: %empty

   35 $@6: %empty

   36 CONTROL_FLOW: CF_IF EXPRESSION LCURLYBRACE $@5 STATEMENTS $@6 RCURLYBRACE CONTROL_FLOW_OPT_ELSE

   37 $@7: %empty

   38 CONTROL_FLOW: CF_FOR $@7 VARIABLE_DEF EXPRESSION SEMICOLON ASSIGNMENT LCURLYBRACE STATEMENTS RCURLYBRACE

   39 $@8: %empty

   40 $@9: %empty

   41 CONTROL_FLOW: CF_WHILE EXPRESSION LCURLYBRACE $@8 STATEMENTS $@9 RCURLYBRACE

   42 $@10: %empty

   43 $@11: %empty

   44 CONTROL_FLOW: CF_DO LCURLYBRACE $@10 STATEMENTS $@11 RCURLYBRACE CF_WHILE EXPRESSION SEMICOLON

   45 CONTROL_FLOW_OPT_ELSE: %empty
   46                      | CF_ELSE LCURLYBRACE STATEMENTS RCURLYBRACE

   47 EXPRESSION: UNARY_OPERATOR EXPRESSION
   48           | EXPRESSION LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION PLUS EXPRESSION
   50           | EXPRESSION MINUS EXPRESSION
   51           | EXPRESSION RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION AND_OPERATOR EXPRESSION
   53           | EXPRESSION OR_OPERATOR EXPRESSION
   54           | EXPRESSION EQUALITY_OPERATOR EXPRESSION
   55           | LPARENT EXPRESSION RPARENT
   56           | FUNCTION_CALL
   57           | IDENTIFIER
   58           | CONSTANT

   59 UNARY_OPERATOR: MINUS
   60               | NEGATION

   61 FUNCTION_CALL: IDENTIFIER LPARENT FUNC_CALL_PARAM RPARENT

   62 FUNC_CALL_PARAM: %empty
   63                | EXPRESSION FUNC_CALL_PARAM_OPT

   64 FUNC_CALL_PARAM_OPT: %empty
   65                    | COMMA EXPRESSION FUNC_CALL_PARAM_OPT

   66 CONSTANT: INTEGER_CONSTANT
   67         | FLOAT_CONSTANT
   68         | BOOLEAN_CONSTANT
   69         | CHARACTER_CONSTANT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER_CONSTANT <IntConst> (258) 66
    FLOAT_CONSTANT <FloatConst> (259) 67
    NEGATION <CharConst> (260) 60
    CF_IF <token> (261) 36
    CF_ELSE <token> (262) 46
    CF_FOR <token> (263) 38
    CF_WHILE <token> (264) 41 44
    CF_DO <token> (265) 44
    CF_RETURN <token> (266) 31
    LPARENT <token> (267) 6 10 55 61
    RPARENT <token> (268) 6 10 55 61
    LCURLYBRACE <token> (269) 26 36 38 41 44 46
    RCURLYBRACE <token> (270) 26 36 38 41 44 46
    SEMICOLON <token> (271) 27 28 29 30 31 38 44
    COMMA <token> (272) 14 65
    START_FUNC_DECL <funcDecl> (273) 6
    BOOLEAN_CONSTANT <BoolConst> (274) 68
    MINUS <CharConst> (275) 50 59
    LINEAR_ARITHMETIC <string> (276) 48
    PLUS <string> (277) 49
    DATATYPE <string> (278) 15 27
    VOID <string> (279) 16
    IDENTIFIER <string> (280) 10 12 14 27 28 29 57 61
    CHARACTER_CONSTANT <string> (281) 69
    RELATIONAL_OPERATOR <string> (282) 51
    AND_OPERATOR <string> (283) 52
    OR_OPERATOR <string> (284) 53
    EQUALITY_OPERATOR <string> (285) 54
    ASSIGN <string> (286) 27 28
    MODIFIER <string> (287) 29
    DEC_FUNC_PREC (288)
    DEC_FUNC_PREC2 (289)
    UNARY_OPERATOR_PREC (290)


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    INPUT (37)
        on left: 1 2
        on right: 0 2
    PROGRAM (38)
        on left: 4
        on right: 2
    $@1 (39)
        on left: 3
        on right: 4
    START_FUNCTION <funcDecl> (40)
        on left: 6
        on right: 4
    $@2 (41)
        on left: 5
        on right: 6
    DEC_FUNCS <_funcDeclList> (42)
        on left: 7 8
        on right: 4 8
    DEC_FUNC <funcDecl> (43)
        on left: 10
        on right: 8
    $@3 (44)
        on left: 9
        on right: 10
    DEC_FUNC_CALL_PARAMS <funcDeclParamsList> (45)
        on left: 11 12
        on right: 10
    DEC_FUNC_CALL_PARAMS_OPT <funcDeclParamsList> (46)
        on left: 13 14
        on right: 12 14
    RETURNTYPE <string> (47)
        on left: 15 16
        on right: 10 12 14
    STATEMENTS <stmntList> (48)
        on left: 17 18
        on right: 18 26 36 38 41 44 46
    STATEMENT <stmnt> (49)
        on left: 19 20 21 22 23 24
        on right: 18
    FUNCTION_BLOCK <stmnt> (50)
        on left: 26
        on right: 6 10 24
    $@4 (51)
        on left: 25
        on right: 26
    VARIABLE_DEF <stmnt> (52)
        on left: 27
        on right: 19 38
    ASSIGNMENT <stmnt> (53)
        on left: 28 29
        on right: 20 38
    EXPRESSION_SC <stmnt> (54)
        on left: 30
        on right: 21
    RETURN_CALL <stmnt> (55)
        on left: 31
        on right: 22
    RETURN_CALL_OPT <expr> (56)
        on left: 32 33
        on right: 31
    CONTROL_FLOW <stmnt> (57)
        on left: 36 38 41 44
        on right: 23
    $@5 (58)
        on left: 34
        on right: 36
    $@6 (59)
        on left: 35
        on right: 36
    $@7 (60)
        on left: 37
        on right: 38
    $@8 (61)
        on left: 39
        on right: 41
    $@9 (62)
        on left: 40
        on right: 41
    $@10 (63)
        on left: 42
        on right: 44
    $@11 (64)
        on left: 43
        on right: 44
    CONTROL_FLOW_OPT_ELSE <stmntList> (65)
        on left: 45 46
        on right: 36
    EXPRESSION <expr> (66)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58
        on right: 27 28 29 30 33 36 38 41 44 47 48 49 50 51 52 53 54 55 63 65
    UNARY_OPERATOR <CharConst> (67)
        on left: 59 60
        on right: 47
    FUNCTION_CALL <expr> (68)
        on left: 61
        on right: 56
    FUNC_CALL_PARAM <exprList> (69)
        on left: 62 63
        on right: 61
    FUNC_CALL_PARAM_OPT <exprList> (70)
        on left: 64 65
        on right: 63 65
    CONSTANT <expr> (71)
        on left: 66 67 68 69
        on right: 58


State 0

    0 $accept: . INPUT $end

    $default  reduce using rule 1 (INPUT)

    INPUT  go to state 1


State 1

    0 $accept: INPUT . $end
    2 INPUT: INPUT . PROGRAM

    $end  shift, and go to state 2

    $default  reduce using rule 3 ($@1)

    PROGRAM  go to state 3
    $@1      go to state 4


State 2

    0 $accept: INPUT $end .

    $default  accept


State 3

    2 INPUT: INPUT PROGRAM .

    $default  reduce using rule 2 (INPUT)


State 4

    4 PROGRAM: $@1 . DEC_FUNCS START_FUNCTION DEC_FUNCS

    $default  reduce using rule 7 (DEC_FUNCS)

    DEC_FUNCS  go to state 5


State 5

    4 PROGRAM: $@1 DEC_FUNCS . START_FUNCTION DEC_FUNCS
    8 DEC_FUNCS: DEC_FUNCS . DEC_FUNC

    START_FUNC_DECL  shift, and go to state 6
    DATATYPE         shift, and go to state 7
    VOID             shift, and go to state 8

    START_FUNCTION  go to state 9
    DEC_FUNC        go to state 10
    RETURNTYPE      go to state 11


State 6

    6 START_FUNCTION: START_FUNC_DECL . $@2 LPARENT RPARENT FUNCTION_BLOCK

    $default  reduce using rule 5 ($@2)

    $@2  go to state 12


State 7

   15 RETURNTYPE: DATATYPE .

    $default  reduce using rule 15 (RETURNTYPE)


State 8

   16 RETURNTYPE: VOID .

    $default  reduce using rule 16 (RETURNTYPE)


State 9

    4 PROGRAM: $@1 DEC_FUNCS START_FUNCTION . DEC_FUNCS

    $default  reduce using rule 7 (DEC_FUNCS)

    DEC_FUNCS  go to state 13


State 10

    8 DEC_FUNCS: DEC_FUNCS DEC_FUNC .

    $default  reduce using rule 8 (DEC_FUNCS)


State 11

   10 DEC_FUNC: RETURNTYPE . IDENTIFIER $@3 LPARENT DEC_FUNC_CALL_PARAMS RPARENT FUNCTION_BLOCK

    IDENTIFIER  shift, and go to state 14


State 12

    6 START_FUNCTION: START_FUNC_DECL $@2 . LPARENT RPARENT FUNCTION_BLOCK

    LPARENT  shift, and go to state 15


State 13

    4 PROGRAM: $@1 DEC_FUNCS START_FUNCTION DEC_FUNCS .
    8 DEC_FUNCS: DEC_FUNCS . DEC_FUNC

    DATATYPE  shift, and go to state 7
    VOID      shift, and go to state 8

    DATATYPE  [reduce using rule 4 (PROGRAM)]
    VOID      [reduce using rule 4 (PROGRAM)]
    $default  reduce using rule 4 (PROGRAM)

    DEC_FUNC    go to state 10
    RETURNTYPE  go to state 11


State 14

   10 DEC_FUNC: RETURNTYPE IDENTIFIER . $@3 LPARENT DEC_FUNC_CALL_PARAMS RPARENT FUNCTION_BLOCK

    $default  reduce using rule 9 ($@3)

    $@3  go to state 16


State 15

    6 START_FUNCTION: START_FUNC_DECL $@2 LPARENT . RPARENT FUNCTION_BLOCK

    RPARENT  shift, and go to state 17


State 16

   10 DEC_FUNC: RETURNTYPE IDENTIFIER $@3 . LPARENT DEC_FUNC_CALL_PARAMS RPARENT FUNCTION_BLOCK

    LPARENT  shift, and go to state 18


State 17

    6 START_FUNCTION: START_FUNC_DECL $@2 LPARENT RPARENT . FUNCTION_BLOCK

    $default  reduce using rule 25 ($@4)

    FUNCTION_BLOCK  go to state 19
    $@4             go to state 20


State 18

   10 DEC_FUNC: RETURNTYPE IDENTIFIER $@3 LPARENT . DEC_FUNC_CALL_PARAMS RPARENT FUNCTION_BLOCK

    DATATYPE  shift, and go to state 7
    VOID      shift, and go to state 8

    $default  reduce using rule 11 (DEC_FUNC_CALL_PARAMS)

    DEC_FUNC_CALL_PARAMS  go to state 21
    RETURNTYPE            go to state 22


State 19

    6 START_FUNCTION: START_FUNC_DECL $@2 LPARENT RPARENT FUNCTION_BLOCK .

    $default  reduce using rule 6 (START_FUNCTION)


State 20

   26 FUNCTION_BLOCK: $@4 . LCURLYBRACE STATEMENTS RCURLYBRACE

    LCURLYBRACE  shift, and go to state 23


State 21

   10 DEC_FUNC: RETURNTYPE IDENTIFIER $@3 LPARENT DEC_FUNC_CALL_PARAMS . RPARENT FUNCTION_BLOCK

    RPARENT  shift, and go to state 24


State 22

   12 DEC_FUNC_CALL_PARAMS: RETURNTYPE . IDENTIFIER DEC_FUNC_CALL_PARAMS_OPT

    IDENTIFIER  shift, and go to state 25


State 23

   26 FUNCTION_BLOCK: $@4 LCURLYBRACE . STATEMENTS RCURLYBRACE

    $default  reduce using rule 17 (STATEMENTS)

    STATEMENTS  go to state 26


State 24

   10 DEC_FUNC: RETURNTYPE IDENTIFIER $@3 LPARENT DEC_FUNC_CALL_PARAMS RPARENT . FUNCTION_BLOCK

    $default  reduce using rule 25 ($@4)

    FUNCTION_BLOCK  go to state 27
    $@4             go to state 20


State 25

   12 DEC_FUNC_CALL_PARAMS: RETURNTYPE IDENTIFIER . DEC_FUNC_CALL_PARAMS_OPT

    COMMA  shift, and go to state 28

    $default  reduce using rule 13 (DEC_FUNC_CALL_PARAMS_OPT)

    DEC_FUNC_CALL_PARAMS_OPT  go to state 29


State 26

   18 STATEMENTS: STATEMENTS . STATEMENT
   26 FUNCTION_BLOCK: $@4 LCURLYBRACE STATEMENTS . RCURLYBRACE

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    CF_IF               shift, and go to state 33
    CF_FOR              shift, and go to state 34
    CF_WHILE            shift, and go to state 35
    CF_DO               shift, and go to state 36
    CF_RETURN           shift, and go to state 37
    LPARENT             shift, and go to state 38
    RCURLYBRACE         shift, and go to state 39
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    DATATYPE            shift, and go to state 42
    IDENTIFIER          shift, and go to state 43
    CHARACTER_CONSTANT  shift, and go to state 44

    $default  reduce using rule 25 ($@4)

    STATEMENT       go to state 45
    FUNCTION_BLOCK  go to state 46
    $@4             go to state 20
    VARIABLE_DEF    go to state 47
    ASSIGNMENT      go to state 48
    EXPRESSION_SC   go to state 49
    RETURN_CALL     go to state 50
    CONTROL_FLOW    go to state 51
    EXPRESSION      go to state 52
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 27

   10 DEC_FUNC: RETURNTYPE IDENTIFIER $@3 LPARENT DEC_FUNC_CALL_PARAMS RPARENT FUNCTION_BLOCK .

    $default  reduce using rule 10 (DEC_FUNC)


State 28

   14 DEC_FUNC_CALL_PARAMS_OPT: COMMA . RETURNTYPE IDENTIFIER DEC_FUNC_CALL_PARAMS_OPT

    DATATYPE  shift, and go to state 7
    VOID      shift, and go to state 8

    RETURNTYPE  go to state 56


State 29

   12 DEC_FUNC_CALL_PARAMS: RETURNTYPE IDENTIFIER DEC_FUNC_CALL_PARAMS_OPT .

    $default  reduce using rule 12 (DEC_FUNC_CALL_PARAMS)


State 30

   66 CONSTANT: INTEGER_CONSTANT .

    $default  reduce using rule 66 (CONSTANT)


State 31

   67 CONSTANT: FLOAT_CONSTANT .

    $default  reduce using rule 67 (CONSTANT)


State 32

   60 UNARY_OPERATOR: NEGATION .

    $default  reduce using rule 60 (UNARY_OPERATOR)


State 33

   36 CONTROL_FLOW: CF_IF . EXPRESSION LCURLYBRACE $@5 STATEMENTS $@6 RCURLYBRACE CONTROL_FLOW_OPT_ELSE

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 58
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 34

   38 CONTROL_FLOW: CF_FOR . $@7 VARIABLE_DEF EXPRESSION SEMICOLON ASSIGNMENT LCURLYBRACE STATEMENTS RCURLYBRACE

    $default  reduce using rule 37 ($@7)

    $@7  go to state 59


State 35

   41 CONTROL_FLOW: CF_WHILE . EXPRESSION LCURLYBRACE $@8 STATEMENTS $@9 RCURLYBRACE

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 60
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 36

   44 CONTROL_FLOW: CF_DO . LCURLYBRACE $@10 STATEMENTS $@11 RCURLYBRACE CF_WHILE EXPRESSION SEMICOLON

    LCURLYBRACE  shift, and go to state 61


State 37

   31 RETURN_CALL: CF_RETURN . RETURN_CALL_OPT SEMICOLON

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    $default  reduce using rule 32 (RETURN_CALL_OPT)

    RETURN_CALL_OPT  go to state 62
    EXPRESSION       go to state 63
    UNARY_OPERATOR   go to state 53
    FUNCTION_CALL    go to state 54
    CONSTANT         go to state 55


State 38

   55 EXPRESSION: LPARENT . EXPRESSION RPARENT

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 64
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 39

   26 FUNCTION_BLOCK: $@4 LCURLYBRACE STATEMENTS RCURLYBRACE .

    $default  reduce using rule 26 (FUNCTION_BLOCK)


State 40

   68 CONSTANT: BOOLEAN_CONSTANT .

    $default  reduce using rule 68 (CONSTANT)


State 41

   59 UNARY_OPERATOR: MINUS .

    $default  reduce using rule 59 (UNARY_OPERATOR)


State 42

   27 VARIABLE_DEF: DATATYPE . IDENTIFIER ASSIGN EXPRESSION SEMICOLON

    IDENTIFIER  shift, and go to state 65


State 43

   28 ASSIGNMENT: IDENTIFIER . ASSIGN EXPRESSION SEMICOLON
   29           | IDENTIFIER . MODIFIER EXPRESSION SEMICOLON
   57 EXPRESSION: IDENTIFIER .
   61 FUNCTION_CALL: IDENTIFIER . LPARENT FUNC_CALL_PARAM RPARENT

    LPARENT   shift, and go to state 66
    ASSIGN    shift, and go to state 67
    MODIFIER  shift, and go to state 68

    $default  reduce using rule 57 (EXPRESSION)


State 44

   69 CONSTANT: CHARACTER_CONSTANT .

    $default  reduce using rule 69 (CONSTANT)


State 45

   18 STATEMENTS: STATEMENTS STATEMENT .

    $default  reduce using rule 18 (STATEMENTS)


State 46

   24 STATEMENT: FUNCTION_BLOCK .

    $default  reduce using rule 24 (STATEMENT)


State 47

   19 STATEMENT: VARIABLE_DEF .

    $default  reduce using rule 19 (STATEMENT)


State 48

   20 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 20 (STATEMENT)


State 49

   21 STATEMENT: EXPRESSION_SC .

    $default  reduce using rule 21 (STATEMENT)


State 50

   22 STATEMENT: RETURN_CALL .

    $default  reduce using rule 22 (STATEMENT)


State 51

   23 STATEMENT: CONTROL_FLOW .

    $default  reduce using rule 23 (STATEMENT)


State 52

   30 EXPRESSION_SC: EXPRESSION . SEMICOLON
   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    SEMICOLON            shift, and go to state 69
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76


State 53

   47 EXPRESSION: UNARY_OPERATOR . EXPRESSION

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 77
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 54

   56 EXPRESSION: FUNCTION_CALL .

    $default  reduce using rule 56 (EXPRESSION)


State 55

   58 EXPRESSION: CONSTANT .

    $default  reduce using rule 58 (EXPRESSION)


State 56

   14 DEC_FUNC_CALL_PARAMS_OPT: COMMA RETURNTYPE . IDENTIFIER DEC_FUNC_CALL_PARAMS_OPT

    IDENTIFIER  shift, and go to state 78


State 57

   57 EXPRESSION: IDENTIFIER .
   61 FUNCTION_CALL: IDENTIFIER . LPARENT FUNC_CALL_PARAM RPARENT

    LPARENT  shift, and go to state 66

    $default  reduce using rule 57 (EXPRESSION)


State 58

   36 CONTROL_FLOW: CF_IF EXPRESSION . LCURLYBRACE $@5 STATEMENTS $@6 RCURLYBRACE CONTROL_FLOW_OPT_ELSE
   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    LCURLYBRACE          shift, and go to state 79
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76


State 59

   38 CONTROL_FLOW: CF_FOR $@7 . VARIABLE_DEF EXPRESSION SEMICOLON ASSIGNMENT LCURLYBRACE STATEMENTS RCURLYBRACE

    DATATYPE  shift, and go to state 42

    VARIABLE_DEF  go to state 80


State 60

   41 CONTROL_FLOW: CF_WHILE EXPRESSION . LCURLYBRACE $@8 STATEMENTS $@9 RCURLYBRACE
   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    LCURLYBRACE          shift, and go to state 81
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76


State 61

   44 CONTROL_FLOW: CF_DO LCURLYBRACE . $@10 STATEMENTS $@11 RCURLYBRACE CF_WHILE EXPRESSION SEMICOLON

    $default  reduce using rule 42 ($@10)

    $@10  go to state 82


State 62

   31 RETURN_CALL: CF_RETURN RETURN_CALL_OPT . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 63

   33 RETURN_CALL_OPT: EXPRESSION .
   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76

    $default  reduce using rule 33 (RETURN_CALL_OPT)


State 64

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION
   55           | LPARENT EXPRESSION . RPARENT

    RPARENT              shift, and go to state 84
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76


State 65

   27 VARIABLE_DEF: DATATYPE IDENTIFIER . ASSIGN EXPRESSION SEMICOLON

    ASSIGN  shift, and go to state 85


State 66

   61 FUNCTION_CALL: IDENTIFIER LPARENT . FUNC_CALL_PARAM RPARENT

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    $default  reduce using rule 62 (FUNC_CALL_PARAM)

    EXPRESSION       go to state 86
    UNARY_OPERATOR   go to state 53
    FUNCTION_CALL    go to state 54
    FUNC_CALL_PARAM  go to state 87
    CONSTANT         go to state 55


State 67

   28 ASSIGNMENT: IDENTIFIER ASSIGN . EXPRESSION SEMICOLON

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 88
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 68

   29 ASSIGNMENT: IDENTIFIER MODIFIER . EXPRESSION SEMICOLON

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 89
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 69

   30 EXPRESSION_SC: EXPRESSION SEMICOLON .

    $default  reduce using rule 30 (EXPRESSION_SC)


State 70

   50 EXPRESSION: EXPRESSION MINUS . EXPRESSION

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 90
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 71

   48 EXPRESSION: EXPRESSION LINEAR_ARITHMETIC . EXPRESSION

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 91
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 72

   49 EXPRESSION: EXPRESSION PLUS . EXPRESSION

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 92
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 73

   51 EXPRESSION: EXPRESSION RELATIONAL_OPERATOR . EXPRESSION

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 93
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 74

   52 EXPRESSION: EXPRESSION AND_OPERATOR . EXPRESSION

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 94
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 75

   53 EXPRESSION: EXPRESSION OR_OPERATOR . EXPRESSION

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 95
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 76

   54 EXPRESSION: EXPRESSION EQUALITY_OPERATOR . EXPRESSION

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 96
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 77

   47 EXPRESSION: UNARY_OPERATOR EXPRESSION .
   48           | EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    $default  reduce using rule 47 (EXPRESSION)


State 78

   14 DEC_FUNC_CALL_PARAMS_OPT: COMMA RETURNTYPE IDENTIFIER . DEC_FUNC_CALL_PARAMS_OPT

    COMMA  shift, and go to state 28

    $default  reduce using rule 13 (DEC_FUNC_CALL_PARAMS_OPT)

    DEC_FUNC_CALL_PARAMS_OPT  go to state 97


State 79

   36 CONTROL_FLOW: CF_IF EXPRESSION LCURLYBRACE . $@5 STATEMENTS $@6 RCURLYBRACE CONTROL_FLOW_OPT_ELSE

    $default  reduce using rule 34 ($@5)

    $@5  go to state 98


State 80

   38 CONTROL_FLOW: CF_FOR $@7 VARIABLE_DEF . EXPRESSION SEMICOLON ASSIGNMENT LCURLYBRACE STATEMENTS RCURLYBRACE

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 99
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 81

   41 CONTROL_FLOW: CF_WHILE EXPRESSION LCURLYBRACE . $@8 STATEMENTS $@9 RCURLYBRACE

    $default  reduce using rule 39 ($@8)

    $@8  go to state 100


State 82

   44 CONTROL_FLOW: CF_DO LCURLYBRACE $@10 . STATEMENTS $@11 RCURLYBRACE CF_WHILE EXPRESSION SEMICOLON

    $default  reduce using rule 17 (STATEMENTS)

    STATEMENTS  go to state 101


State 83

   31 RETURN_CALL: CF_RETURN RETURN_CALL_OPT SEMICOLON .

    $default  reduce using rule 31 (RETURN_CALL)


State 84

   55 EXPRESSION: LPARENT EXPRESSION RPARENT .

    $default  reduce using rule 55 (EXPRESSION)


State 85

   27 VARIABLE_DEF: DATATYPE IDENTIFIER ASSIGN . EXPRESSION SEMICOLON

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 102
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 86

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION
   63 FUNC_CALL_PARAM: EXPRESSION . FUNC_CALL_PARAM_OPT

    COMMA                shift, and go to state 103
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76

    $default  reduce using rule 64 (FUNC_CALL_PARAM_OPT)

    FUNC_CALL_PARAM_OPT  go to state 104


State 87

   61 FUNCTION_CALL: IDENTIFIER LPARENT FUNC_CALL_PARAM . RPARENT

    RPARENT  shift, and go to state 105


State 88

   28 ASSIGNMENT: IDENTIFIER ASSIGN EXPRESSION . SEMICOLON
   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    SEMICOLON            shift, and go to state 106
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76


State 89

   29 ASSIGNMENT: IDENTIFIER MODIFIER EXPRESSION . SEMICOLON
   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    SEMICOLON            shift, and go to state 107
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76


State 90

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   50           | EXPRESSION MINUS EXPRESSION .
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    LINEAR_ARITHMETIC  shift, and go to state 71

    $default  reduce using rule 50 (EXPRESSION)


State 91

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   48           | EXPRESSION LINEAR_ARITHMETIC EXPRESSION .
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    $default  reduce using rule 48 (EXPRESSION)


State 92

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   49           | EXPRESSION PLUS EXPRESSION .
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    LINEAR_ARITHMETIC  shift, and go to state 71

    $default  reduce using rule 49 (EXPRESSION)


State 93

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   51           | EXPRESSION RELATIONAL_OPERATOR EXPRESSION .
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    MINUS              shift, and go to state 70
    LINEAR_ARITHMETIC  shift, and go to state 71
    PLUS               shift, and go to state 72

    $default  reduce using rule 51 (EXPRESSION)


State 94

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   52           | EXPRESSION AND_OPERATOR EXPRESSION .
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    EQUALITY_OPERATOR    shift, and go to state 76

    $default  reduce using rule 52 (EXPRESSION)


State 95

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   53           | EXPRESSION OR_OPERATOR EXPRESSION .
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    EQUALITY_OPERATOR    shift, and go to state 76

    $default  reduce using rule 53 (EXPRESSION)


State 96

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION
   54           | EXPRESSION EQUALITY_OPERATOR EXPRESSION .

    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73

    $default  reduce using rule 54 (EXPRESSION)


State 97

   14 DEC_FUNC_CALL_PARAMS_OPT: COMMA RETURNTYPE IDENTIFIER DEC_FUNC_CALL_PARAMS_OPT .

    $default  reduce using rule 14 (DEC_FUNC_CALL_PARAMS_OPT)


State 98

   36 CONTROL_FLOW: CF_IF EXPRESSION LCURLYBRACE $@5 . STATEMENTS $@6 RCURLYBRACE CONTROL_FLOW_OPT_ELSE

    $default  reduce using rule 17 (STATEMENTS)

    STATEMENTS  go to state 108


State 99

   38 CONTROL_FLOW: CF_FOR $@7 VARIABLE_DEF EXPRESSION . SEMICOLON ASSIGNMENT LCURLYBRACE STATEMENTS RCURLYBRACE
   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    SEMICOLON            shift, and go to state 109
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76


State 100

   41 CONTROL_FLOW: CF_WHILE EXPRESSION LCURLYBRACE $@8 . STATEMENTS $@9 RCURLYBRACE

    $default  reduce using rule 17 (STATEMENTS)

    STATEMENTS  go to state 110


State 101

   18 STATEMENTS: STATEMENTS . STATEMENT
   44 CONTROL_FLOW: CF_DO LCURLYBRACE $@10 STATEMENTS . $@11 RCURLYBRACE CF_WHILE EXPRESSION SEMICOLON

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    CF_IF               shift, and go to state 33
    CF_FOR              shift, and go to state 34
    CF_WHILE            shift, and go to state 35
    CF_DO               shift, and go to state 36
    CF_RETURN           shift, and go to state 37
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    DATATYPE            shift, and go to state 42
    IDENTIFIER          shift, and go to state 43
    CHARACTER_CONSTANT  shift, and go to state 44

    RCURLYBRACE  reduce using rule 43 ($@11)
    $default     reduce using rule 25 ($@4)

    STATEMENT       go to state 45
    FUNCTION_BLOCK  go to state 46
    $@4             go to state 20
    VARIABLE_DEF    go to state 47
    ASSIGNMENT      go to state 48
    EXPRESSION_SC   go to state 49
    RETURN_CALL     go to state 50
    CONTROL_FLOW    go to state 51
    $@11            go to state 111
    EXPRESSION      go to state 52
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 102

   27 VARIABLE_DEF: DATATYPE IDENTIFIER ASSIGN EXPRESSION . SEMICOLON
   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    SEMICOLON            shift, and go to state 112
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76


State 103

   65 FUNC_CALL_PARAM_OPT: COMMA . EXPRESSION FUNC_CALL_PARAM_OPT

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 113
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 104

   63 FUNC_CALL_PARAM: EXPRESSION FUNC_CALL_PARAM_OPT .

    $default  reduce using rule 63 (FUNC_CALL_PARAM)


State 105

   61 FUNCTION_CALL: IDENTIFIER LPARENT FUNC_CALL_PARAM RPARENT .

    $default  reduce using rule 61 (FUNCTION_CALL)


State 106

   28 ASSIGNMENT: IDENTIFIER ASSIGN EXPRESSION SEMICOLON .

    $default  reduce using rule 28 (ASSIGNMENT)


State 107

   29 ASSIGNMENT: IDENTIFIER MODIFIER EXPRESSION SEMICOLON .

    $default  reduce using rule 29 (ASSIGNMENT)


State 108

   18 STATEMENTS: STATEMENTS . STATEMENT
   36 CONTROL_FLOW: CF_IF EXPRESSION LCURLYBRACE $@5 STATEMENTS . $@6 RCURLYBRACE CONTROL_FLOW_OPT_ELSE

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    CF_IF               shift, and go to state 33
    CF_FOR              shift, and go to state 34
    CF_WHILE            shift, and go to state 35
    CF_DO               shift, and go to state 36
    CF_RETURN           shift, and go to state 37
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    DATATYPE            shift, and go to state 42
    IDENTIFIER          shift, and go to state 43
    CHARACTER_CONSTANT  shift, and go to state 44

    RCURLYBRACE  reduce using rule 35 ($@6)
    $default     reduce using rule 25 ($@4)

    STATEMENT       go to state 45
    FUNCTION_BLOCK  go to state 46
    $@4             go to state 20
    VARIABLE_DEF    go to state 47
    ASSIGNMENT      go to state 48
    EXPRESSION_SC   go to state 49
    RETURN_CALL     go to state 50
    CONTROL_FLOW    go to state 51
    $@6             go to state 114
    EXPRESSION      go to state 52
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 109

   38 CONTROL_FLOW: CF_FOR $@7 VARIABLE_DEF EXPRESSION SEMICOLON . ASSIGNMENT LCURLYBRACE STATEMENTS RCURLYBRACE

    IDENTIFIER  shift, and go to state 115

    ASSIGNMENT  go to state 116


State 110

   18 STATEMENTS: STATEMENTS . STATEMENT
   41 CONTROL_FLOW: CF_WHILE EXPRESSION LCURLYBRACE $@8 STATEMENTS . $@9 RCURLYBRACE

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    CF_IF               shift, and go to state 33
    CF_FOR              shift, and go to state 34
    CF_WHILE            shift, and go to state 35
    CF_DO               shift, and go to state 36
    CF_RETURN           shift, and go to state 37
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    DATATYPE            shift, and go to state 42
    IDENTIFIER          shift, and go to state 43
    CHARACTER_CONSTANT  shift, and go to state 44

    RCURLYBRACE  reduce using rule 40 ($@9)
    $default     reduce using rule 25 ($@4)

    STATEMENT       go to state 45
    FUNCTION_BLOCK  go to state 46
    $@4             go to state 20
    VARIABLE_DEF    go to state 47
    ASSIGNMENT      go to state 48
    EXPRESSION_SC   go to state 49
    RETURN_CALL     go to state 50
    CONTROL_FLOW    go to state 51
    $@9             go to state 117
    EXPRESSION      go to state 52
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 111

   44 CONTROL_FLOW: CF_DO LCURLYBRACE $@10 STATEMENTS $@11 . RCURLYBRACE CF_WHILE EXPRESSION SEMICOLON

    RCURLYBRACE  shift, and go to state 118


State 112

   27 VARIABLE_DEF: DATATYPE IDENTIFIER ASSIGN EXPRESSION SEMICOLON .

    $default  reduce using rule 27 (VARIABLE_DEF)


State 113

   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION
   65 FUNC_CALL_PARAM_OPT: COMMA EXPRESSION . FUNC_CALL_PARAM_OPT

    COMMA                shift, and go to state 103
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76

    $default  reduce using rule 64 (FUNC_CALL_PARAM_OPT)

    FUNC_CALL_PARAM_OPT  go to state 119


State 114

   36 CONTROL_FLOW: CF_IF EXPRESSION LCURLYBRACE $@5 STATEMENTS $@6 . RCURLYBRACE CONTROL_FLOW_OPT_ELSE

    RCURLYBRACE  shift, and go to state 120


State 115

   28 ASSIGNMENT: IDENTIFIER . ASSIGN EXPRESSION SEMICOLON
   29           | IDENTIFIER . MODIFIER EXPRESSION SEMICOLON

    ASSIGN    shift, and go to state 67
    MODIFIER  shift, and go to state 68


State 116

   38 CONTROL_FLOW: CF_FOR $@7 VARIABLE_DEF EXPRESSION SEMICOLON ASSIGNMENT . LCURLYBRACE STATEMENTS RCURLYBRACE

    LCURLYBRACE  shift, and go to state 121


State 117

   41 CONTROL_FLOW: CF_WHILE EXPRESSION LCURLYBRACE $@8 STATEMENTS $@9 . RCURLYBRACE

    RCURLYBRACE  shift, and go to state 122


State 118

   44 CONTROL_FLOW: CF_DO LCURLYBRACE $@10 STATEMENTS $@11 RCURLYBRACE . CF_WHILE EXPRESSION SEMICOLON

    CF_WHILE  shift, and go to state 123


State 119

   65 FUNC_CALL_PARAM_OPT: COMMA EXPRESSION FUNC_CALL_PARAM_OPT .

    $default  reduce using rule 65 (FUNC_CALL_PARAM_OPT)


State 120

   36 CONTROL_FLOW: CF_IF EXPRESSION LCURLYBRACE $@5 STATEMENTS $@6 RCURLYBRACE . CONTROL_FLOW_OPT_ELSE

    CF_ELSE  shift, and go to state 124

    $default  reduce using rule 45 (CONTROL_FLOW_OPT_ELSE)

    CONTROL_FLOW_OPT_ELSE  go to state 125


State 121

   38 CONTROL_FLOW: CF_FOR $@7 VARIABLE_DEF EXPRESSION SEMICOLON ASSIGNMENT LCURLYBRACE . STATEMENTS RCURLYBRACE

    $default  reduce using rule 17 (STATEMENTS)

    STATEMENTS  go to state 126


State 122

   41 CONTROL_FLOW: CF_WHILE EXPRESSION LCURLYBRACE $@8 STATEMENTS $@9 RCURLYBRACE .

    $default  reduce using rule 41 (CONTROL_FLOW)


State 123

   44 CONTROL_FLOW: CF_DO LCURLYBRACE $@10 STATEMENTS $@11 RCURLYBRACE CF_WHILE . EXPRESSION SEMICOLON

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    LPARENT             shift, and go to state 38
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    IDENTIFIER          shift, and go to state 57
    CHARACTER_CONSTANT  shift, and go to state 44

    EXPRESSION      go to state 127
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 124

   46 CONTROL_FLOW_OPT_ELSE: CF_ELSE . LCURLYBRACE STATEMENTS RCURLYBRACE

    LCURLYBRACE  shift, and go to state 128


State 125

   36 CONTROL_FLOW: CF_IF EXPRESSION LCURLYBRACE $@5 STATEMENTS $@6 RCURLYBRACE CONTROL_FLOW_OPT_ELSE .

    $default  reduce using rule 36 (CONTROL_FLOW)


State 126

   18 STATEMENTS: STATEMENTS . STATEMENT
   38 CONTROL_FLOW: CF_FOR $@7 VARIABLE_DEF EXPRESSION SEMICOLON ASSIGNMENT LCURLYBRACE STATEMENTS . RCURLYBRACE

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    CF_IF               shift, and go to state 33
    CF_FOR              shift, and go to state 34
    CF_WHILE            shift, and go to state 35
    CF_DO               shift, and go to state 36
    CF_RETURN           shift, and go to state 37
    LPARENT             shift, and go to state 38
    RCURLYBRACE         shift, and go to state 129
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    DATATYPE            shift, and go to state 42
    IDENTIFIER          shift, and go to state 43
    CHARACTER_CONSTANT  shift, and go to state 44

    $default  reduce using rule 25 ($@4)

    STATEMENT       go to state 45
    FUNCTION_BLOCK  go to state 46
    $@4             go to state 20
    VARIABLE_DEF    go to state 47
    ASSIGNMENT      go to state 48
    EXPRESSION_SC   go to state 49
    RETURN_CALL     go to state 50
    CONTROL_FLOW    go to state 51
    EXPRESSION      go to state 52
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 127

   44 CONTROL_FLOW: CF_DO LCURLYBRACE $@10 STATEMENTS $@11 RCURLYBRACE CF_WHILE EXPRESSION . SEMICOLON
   48 EXPRESSION: EXPRESSION . LINEAR_ARITHMETIC EXPRESSION
   49           | EXPRESSION . PLUS EXPRESSION
   50           | EXPRESSION . MINUS EXPRESSION
   51           | EXPRESSION . RELATIONAL_OPERATOR EXPRESSION
   52           | EXPRESSION . AND_OPERATOR EXPRESSION
   53           | EXPRESSION . OR_OPERATOR EXPRESSION
   54           | EXPRESSION . EQUALITY_OPERATOR EXPRESSION

    SEMICOLON            shift, and go to state 130
    MINUS                shift, and go to state 70
    LINEAR_ARITHMETIC    shift, and go to state 71
    PLUS                 shift, and go to state 72
    RELATIONAL_OPERATOR  shift, and go to state 73
    AND_OPERATOR         shift, and go to state 74
    OR_OPERATOR          shift, and go to state 75
    EQUALITY_OPERATOR    shift, and go to state 76


State 128

   46 CONTROL_FLOW_OPT_ELSE: CF_ELSE LCURLYBRACE . STATEMENTS RCURLYBRACE

    $default  reduce using rule 17 (STATEMENTS)

    STATEMENTS  go to state 131


State 129

   38 CONTROL_FLOW: CF_FOR $@7 VARIABLE_DEF EXPRESSION SEMICOLON ASSIGNMENT LCURLYBRACE STATEMENTS RCURLYBRACE .

    $default  reduce using rule 38 (CONTROL_FLOW)


State 130

   44 CONTROL_FLOW: CF_DO LCURLYBRACE $@10 STATEMENTS $@11 RCURLYBRACE CF_WHILE EXPRESSION SEMICOLON .

    $default  reduce using rule 44 (CONTROL_FLOW)


State 131

   18 STATEMENTS: STATEMENTS . STATEMENT
   46 CONTROL_FLOW_OPT_ELSE: CF_ELSE LCURLYBRACE STATEMENTS . RCURLYBRACE

    INTEGER_CONSTANT    shift, and go to state 30
    FLOAT_CONSTANT      shift, and go to state 31
    NEGATION            shift, and go to state 32
    CF_IF               shift, and go to state 33
    CF_FOR              shift, and go to state 34
    CF_WHILE            shift, and go to state 35
    CF_DO               shift, and go to state 36
    CF_RETURN           shift, and go to state 37
    LPARENT             shift, and go to state 38
    RCURLYBRACE         shift, and go to state 132
    BOOLEAN_CONSTANT    shift, and go to state 40
    MINUS               shift, and go to state 41
    DATATYPE            shift, and go to state 42
    IDENTIFIER          shift, and go to state 43
    CHARACTER_CONSTANT  shift, and go to state 44

    $default  reduce using rule 25 ($@4)

    STATEMENT       go to state 45
    FUNCTION_BLOCK  go to state 46
    $@4             go to state 20
    VARIABLE_DEF    go to state 47
    ASSIGNMENT      go to state 48
    EXPRESSION_SC   go to state 49
    RETURN_CALL     go to state 50
    CONTROL_FLOW    go to state 51
    EXPRESSION      go to state 52
    UNARY_OPERATOR  go to state 53
    FUNCTION_CALL   go to state 54
    CONSTANT        go to state 55


State 132

   46 CONTROL_FLOW_OPT_ELSE: CF_ELSE LCURLYBRACE STATEMENTS RCURLYBRACE .

    $default  reduce using rule 46 (CONTROL_FLOW_OPT_ELSE)
